{"version":3,"sources":["../../api/services/meal.service.js"],"names":["MealService","fetchAllMeals","validMeals","dummyData","meals","map","meal","newMeal","Meal","id","name","size","price","addMeal","mealLength","length","lastId","newId","AddUp","push","getAMeal","find","Number","destroyOneMeal","isDeleted","thisMealId","theMealIndexById","indexOf","removedMeal","splice","updateOneMeal","a","b","mealToUpdate"],"mappings":"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","sourcesContent":["import dummyData from \"../utils/mealDummyData\";\r\nimport Meal from \"../models/meal.model\";\r\n\r\nconst MealService = {\r\n    fetchAllMeals() {\r\n        const validMeals = dummyData.meals.map((meal) => {\r\n            const newMeal = new Meal();\r\n            newMeal.id = meal.id;\r\n            newMeal.name = meal.name;\r\n            newMeal.size = meal.size;\r\n            newMeal.price = meal.price;\r\n            return newMeal;\r\n        });\r\n        return validMeals;\r\n    },\r\n\r\n    addMeal(meal){\r\n        const mealLength = dummyData.meals.length;\r\n        const lastId = dummyData.meals[mealLength - 1].id;\r\n        const newId = lastId + 1;\r\n        \r\n        const AddUp = {\r\n          id: newId,\r\n          name: meal.name,\r\n          size: meal.size,\r\n          price: meal.price\r\n        };\r\n        \r\n        dummyData.meals.push(AddUp);\r\n        return AddUp;\r\n    },\r\n\r\n    getAMeal(id){\r\n        const meal = dummyData.meals.find(meal => Number(meal.id) === Number(id));\r\n        return meal || {};\r\n    },\r\n\r\n    destroyOneMeal(id) {\r\n        let isDeleted = false;\r\n        const thisMealId = dummyData.meals.find(meal => Number(meal.id) === Number(id));\r\n        const theMealIndexById = dummyData.meals.indexOf(thisMealId);\r\n        const removedMeal = dummyData.meals.splice(theMealIndexById, 1);\r\n        if (removedMeal) {\r\n          isDeleted = true;\r\n        }\r\n        return isDeleted;\r\n      },\r\n    \r\n    \r\n      updateOneMeal(a, b) {\r\n        const mealToUpdate = dummyData.meals.find(meal => Number(meal.id) === Number(a));\r\n\r\n        //update meal\r\n        mealToUpdate.id = a;\r\n        mealToUpdate.name = b.name;\r\n        mealToUpdate.size = b.size;\r\n        mealToUpdate.price = b.price;\r\n        return mealToUpdate;\r\n      }\r\n};\r\n\r\nexport default MealService;"],"file":"meal.service.js"}